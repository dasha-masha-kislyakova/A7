services:
  proxy:
    build: .
    environment:
      - SERVICE=proxy
      - PORT=8080
      - OFFICE_URL=http://office:8081
      - LOGISTIC_URL=http://logistic:8082
      - AUTH_URL=http://auth:8083
      - AUDIT_URL=http://audit:8084
      - FE_DIR=/app/FE
    ports:
      - "8080:8080"
    depends_on:
      - office
      - logistic
      - auth
      - audit

  office:
    build: .
    environment:
      - SERVICE=office
      - PORT=8081
      - OFFICE_DSN=postgres://postgres:postgres@office-db:5432/office?sslmode=disable
      - JWT_SECRET=dev-secret
    expose:
      - "8081"
    depends_on:
      office-db:
        condition: service_healthy

  logistic:
    build: .
    environment:
      - SERVICE=logistic
      - PORT=8082
      - LOGISTIC_DSN=postgres://postgres:postgres@logistic-db:5432/logistic?sslmode=disable
      - OFFICE_INTERNAL_URL=http://office:8081
      - JWT_SECRET=dev-secret
    expose:
      - "8082"
    depends_on:
      logistic-db:
        condition: service_healthy
      office:
        condition: service_started

  auth:
    build: .
    environment:
      - SERVICE=auth
      - PORT=8083
      - JWT_SECRET=dev-secret
      - TOKEN_TTL=24h
    expose:
      - "8083"

  audit:
    build: .
    environment:
      - SERVICE=audit
      - PORT=8084
    expose:
      - "8084"

  office-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=office
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    volumes:
      - office_db:/var/lib/postgresql/data

  logistic-db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=logistic
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    volumes:
      - logistic_db:/var/lib/postgresql/data

volumes:
  office_db:
  logistic_db:
