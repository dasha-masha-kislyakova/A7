// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: clients.sql

package officeq

import (
	"context"
)

const getClientByInnName = `-- name: GetClientByInnName :one
SELECT id FROM clients WHERE inn = $1 AND name = $2
`

type GetClientByInnNameParams struct {
	Inn  string
	Name string
}

func (q *Queries) GetClientByInnName(ctx context.Context, arg GetClientByInnNameParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, getClientByInnName, arg.Inn, arg.Name)
	var id int64
	err := row.Scan(&id)
	return id, err
}

const insertClient = `-- name: InsertClient :one
INSERT INTO clients (name, inn, fio, tel, email)
VALUES ($1, $2, $3, $4, $5)
RETURNING id
`

type InsertClientParams struct {
	Name  string
	Inn   string
	Fio   string
	Tel   string
	Email string
}

func (q *Queries) InsertClient(ctx context.Context, arg InsertClientParams) (int64, error) {
	row := q.db.QueryRowContext(ctx, insertClient,
		arg.Name,
		arg.Inn,
		arg.Fio,
		arg.Tel,
		arg.Email,
	)
	var id int64
	err := row.Scan(&id)
	return id, err
}
